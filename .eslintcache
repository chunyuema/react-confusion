[{"/Users/chunyuema/Desktop/Career/react/confusion/src/index.js":"1","/Users/chunyuema/Desktop/Career/react/confusion/src/App.js":"2","/Users/chunyuema/Desktop/Career/react/confusion/src/reportWebVitals.js":"3","/Users/chunyuema/Desktop/Career/react/confusion/src/components/MenuComponent.js":"4","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/dishes.js":"5","/Users/chunyuema/Desktop/Career/react/confusion/src/components/DishdetailComponent.js":"6","/Users/chunyuema/Desktop/Career/react/confusion/src/components/MainComponent.js":"7","/Users/chunyuema/Desktop/Career/react/confusion/src/components/HeaderComponent.js":"8","/Users/chunyuema/Desktop/Career/react/confusion/src/components/FooterComponent.js":"9","/Users/chunyuema/Desktop/Career/react/confusion/src/components/HomeComponent.js":"10","/Users/chunyuema/Desktop/Career/react/confusion/src/components/ContactComponent.js":"11","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/promotions.js":"12","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/comments.js":"13","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/leaders.js":"14","/Users/chunyuema/Desktop/Career/react/confusion/src/components/AboutComponent.js":"15","/Users/chunyuema/Desktop/Career/react/confusion/src/redux/configureStore.js":"16","/Users/chunyuema/Desktop/Career/react/confusion/src/redux/dishes.js":"17","/Users/chunyuema/Desktop/Career/react/confusion/src/redux/promotions.js":"18","/Users/chunyuema/Desktop/Career/react/confusion/src/redux/leaders.js":"19","/Users/chunyuema/Desktop/Career/react/confusion/src/redux/comments.js":"20"},{"size":643,"mtime":1611156048110,"results":"21","hashOfConfig":"22"},{"size":515,"mtime":1611675275505,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1610641584567,"results":"24","hashOfConfig":"22"},{"size":1108,"mtime":1611326691192,"results":"25","hashOfConfig":"22"},{"size":1448,"mtime":1611170424513,"results":"26","hashOfConfig":"22"},{"size":6109,"mtime":1611863575136,"results":"27","hashOfConfig":"22"},{"size":2111,"mtime":1611675269453,"results":"28","hashOfConfig":"22"},{"size":5361,"mtime":1611861181463,"results":"29","hashOfConfig":"22"},{"size":2783,"mtime":1611159851240,"results":"30","hashOfConfig":"22"},{"size":1025,"mtime":1611171452896,"results":"31","hashOfConfig":"22"},{"size":11318,"mtime":1611863575893,"results":"32","hashOfConfig":"22"},{"size":435,"mtime":1611170464757,"results":"33","hashOfConfig":"22"},{"size":4117,"mtime":1611170510838,"results":"34","hashOfConfig":"22"},{"size":2345,"mtime":1611170489257,"results":"35","hashOfConfig":"22"},{"size":4212,"mtime":1611365495529,"results":"36","hashOfConfig":"22"},{"size":472,"mtime":1612023520197,"results":"37","hashOfConfig":"22"},{"size":174,"mtime":1612023464528,"results":"38","hashOfConfig":"22"},{"size":189,"mtime":1612023487525,"results":"39","hashOfConfig":"22"},{"size":177,"mtime":1612023498664,"results":"40","hashOfConfig":"22"},{"size":181,"mtime":1612023474881,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5zruv1",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chunyuema/Desktop/Career/react/confusion/src/index.js",[],["86","87"],"/Users/chunyuema/Desktop/Career/react/confusion/src/App.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/reportWebVitals.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/MenuComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/shared/dishes.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/DishdetailComponent.js",["88","89","90"],"import React, { Component } from 'react'; \nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Row, Button, Modal, ModalBody, ModalHeader, Col, Label} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form'; \nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) =>  (val) && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props){\n        super(props); \n        this.state  = {isModalOpen: false};\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this); \n    }; \n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values){\n        this.toggleModal();\n        console.log(\"Current state is: \" + JSON.stringify(values)); \n        alert(\"Current state is: \" + JSON.stringify(values)); \n    }\n\n    render(){\n        return (\n            <div>\n                <Button color=\"primary\" onClick = {this.toggleModal}>\n                    <span className='fa fa-pencil'>Submit Comments</span>\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}> Submit Your Comments </ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor='rating'> Rating </Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}> Your Name </Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Name\" className=\"form-control\" validators={{required, minLength:minLength(2), maxLength: maxLength(15)}}></Control.text>\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" messages={{\n                                        required: 'Required', \n                                        minLength: 'Must be greater than 2 characters', \n                                        maxLength: 'Must be less than 15 characters'\n                                    }}></Errors>\n                                </Col>    \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}> Comment </Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"author\" placeholder=\"Thoughts on the dish\" rows={5} className=\"form-control\" validators={{required}}></Control.textarea>\n                                    <Errors className=\"text-danger\" model='.comment' show=\"touched\" messages={{\n                                        required: 'You cannot submit empty comments :)'\n                                    }}></Errors>\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" color=\"primary\"> Submit </Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nfunction RenderDish({dish}) {\n    return (\n        <div className=\"col-12 col-md-5 m-1\">\n            <Card>\n                <CardImg width='100%' src={dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle> {dish.name} </CardTitle>\n                    <CardText> {dish.description} </CardText>\n                </CardBody>\n            </Card>\n        </div>\n    ); \n}\n\nfunction RenderComments({comments}) {\n    if (comments != null) {\n        const commentText = comments.map((comment) => {\n            return (\n                <li key={comment.id}>\n                <p>\n                    {comment.comment} -- {comment.author}，\n                    {new Intl.DateTimeFormat('en-US', {\n                        year : 'numeric', \n                        month: 'short', \n                        day: '2-digit'\n                    }).format(new Date(Date.parse(comment.date)))} \n                </p>\n                </li>\n            );\n        });\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <h4>Comments</h4>\n                <ul>{commentText}</ul>\n                <CommentForm />\n            </div>\n        )\n    }\n    else {\n        return (<div></div>)\n    }\n}\n\nconst DishDetail = (props) => {\n    const dish = props.dish;\n    if (dish == null) { return (<div></div>)}\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>{props.dish.name}</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row\">\n                <RenderDish dish={props.dish} />\n                <RenderComments comments={props.comments} />\n            </div>\n        </div>      \n    )\n}\n\nexport default DishDetail;","/Users/chunyuema/Desktop/Career/react/confusion/src/components/MainComponent.js",["91"],"import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n      dishes: state.dishes, \n      comments: state.comments,\n      promotions: state.promotions, \n      leaders: state.leaders \n    }\n}\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props); \n  }\n\n  render() {\n    // HomePage component used for /home\n    const HomePage = () => {\n      return (\n        <Home \n          dish = {this.props.dishes.filter((dish) => dish.featured)[0]}\n          promotion = {this.props.promotions.filter((promo) => promo.featured)[0]}\n          leader = {this.props.leaders.filter((leader) => leader.featured)[0]}\n        />);\n    }\n\n    // DishWithId component used for /menu/:dishId; using match objects\n    const DishWithId = ({match}) => {\n      return(\n        <DishDetail \n          dish={\n            this.props.dishes.filter((dish) => \n            dish.id === parseInt(match.params.dishId, 10))[0]}\n          comments={\n            this.props.comments.filter((comment) => \n            comment.dishId === parseInt(match.params.dishId, 10))} \n        />\n      );\n    }\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route path='/home' component={ HomePage } />\n          <Route exact path=\"/menu\" component={() => <Menu dishes={ this.props.dishes } />} />\n          <Route path=\"/menu/:dishId\" component={ DishWithId } />\n          <Route exact path=\"/contactus\" component={ Contact } />\n          <Route exact path=\"/aboutus\" component={ () => <About leaders={ this.props.leaders} /> } />\n          <Redirect to=\"/home\" />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter((connect(mapStateToProps)(Main)));","/Users/chunyuema/Desktop/Career/react/confusion/src/components/HeaderComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/FooterComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/HomeComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/ContactComponent.js",["92","93","94","95","96","97","98","99"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) =>  (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val)); \nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2, 4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this); \n    }\n\n    handleSubmit(values){\n        console.log(\"Current state is: \" + JSON.stringify(values)); \n        alert(\"Current state is: \" + JSON.stringify(values)); \n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\"><h3>Contact Us</h3><hr /></div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className = \"row row-content\">\n                        <div className=\"col-12\">\n                            <h3>Send us your Feedback</h3>\n                        </div>\n                        <div className=\"col-12 col-md-9\">\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Control.text\n                                            model=\".firstname\" \n                                            id=\"firstname\" \n                                            name=\"firstname\"\n                                            placeholder=\"First Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength:minLength(3), maxLength: maxLength(10)\n                                            }}>\n                                        </Control.text> \n                                        <Errors\n                                        className=\"text-danger\"\n                                        model = '.firstname'\n                                        show = \"touched\"\n                                        messages = {{\n                                            required: 'Required', \n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}>\n                                        </Errors>\n                                    </Col>\n                                    \n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                            placeholder=\"Last Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                            />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".lastname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required',\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                            placeholder=\"Tel. Number\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                            }}\n                                        />\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".telnum\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: 'Required', \n                                                minLength: 'Must be greater than 3 numbers', \n                                                maxLength: 'Must be less than 15 numbers', \n                                                isNumber: 'Must only be numbers'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                            placeholder=\"Email\"\n                                            className=\"form-control\" \n                                            validators={{\n                                                required, validEmail\n                                            }}\n                                        />\n                                        <Errors\n                                            className = \"text-danger\"\n                                            model = \".email\"\n                                            show = \"touched\"\n                                            messages = {{\n                                                required: 'Required', \n                                                validEmail: 'Invaid Email Address'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size: 6, offset: 2}}>\n                                        <div className=\"form-check\">\n                                            <Label check>\n                                                <Control.checkbox model=\".agree\" name=\"agree\"\n                                                    className=\"form-check-input\"\n                                                    /> {' '}\n                                                    <strong>May we contact you?</strong>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                    <Col md={{size: 3, offset: 1}}>\n                                        <Control.select model=\".contactType\" name=\"contactType\"\n                                            className=\"form-control\">\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                            rows=\"12\"\n                                            className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size:10, offset: 2}}>\n                                        <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </LocalForm>\n                        </div>\n                    </div>\n            </div>\n        ); \n    }\n}\n\nexport default Contact;","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/promotions.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/shared/comments.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/shared/leaders.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/AboutComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/redux/configureStore.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/redux/dishes.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/redux/promotions.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/redux/leaders.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/redux/comments.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":43,"column":37,"nodeType":"106","endLine":43,"endColumn":108},{"ruleId":"104","severity":1,"message":"107","line":55,"column":37,"nodeType":"106","endLine":55,"endColumn":211},{"ruleId":"104","severity":1,"message":"108","line":66,"column":37,"nodeType":"106","endLine":66,"endColumn":192},{"ruleId":"109","severity":1,"message":"110","line":23,"column":3,"nodeType":"111","messageId":"112","endLine":25,"endColumn":4},{"ruleId":"113","severity":1,"message":"114","line":55,"column":29,"nodeType":"106","endLine":55,"endColumn":71},{"ruleId":"104","severity":1,"message":"107","line":69,"column":41,"nodeType":"106","endLine":77,"endColumn":48},{"ruleId":"104","severity":1,"message":"107","line":95,"column":41,"nodeType":"106","endLine":101,"endColumn":47},{"ruleId":"104","severity":1,"message":"107","line":117,"column":41,"nodeType":"106","endLine":123,"endColumn":43},{"ruleId":"104","severity":1,"message":"107","line":140,"column":41,"nodeType":"106","endLine":146,"endColumn":43},{"ruleId":"104","severity":1,"message":"115","line":162,"column":49,"nodeType":"106","endLine":164,"endColumn":55},{"ruleId":"104","severity":1,"message":"105","line":170,"column":41,"nodeType":"106","endLine":171,"endColumn":70},{"ruleId":"104","severity":1,"message":"108","line":180,"column":41,"nodeType":"106","endLine":182,"endColumn":72},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]
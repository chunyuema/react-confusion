[{"/Users/chunyuema/Desktop/Career/react/confusion/src/index.js":"1","/Users/chunyuema/Desktop/Career/react/confusion/src/App.js":"2","/Users/chunyuema/Desktop/Career/react/confusion/src/reportWebVitals.js":"3","/Users/chunyuema/Desktop/Career/react/confusion/src/components/MenuComponent.js":"4","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/dishes.js":"5","/Users/chunyuema/Desktop/Career/react/confusion/src/components/DishdetailComponent.js":"6","/Users/chunyuema/Desktop/Career/react/confusion/src/components/MainComponent.js":"7","/Users/chunyuema/Desktop/Career/react/confusion/src/components/HeaderComponent.js":"8","/Users/chunyuema/Desktop/Career/react/confusion/src/components/FooterComponent.js":"9","/Users/chunyuema/Desktop/Career/react/confusion/src/components/HomeComponent.js":"10","/Users/chunyuema/Desktop/Career/react/confusion/src/components/ContactComponent.js":"11","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/promotions.js":"12","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/comments.js":"13","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/leaders.js":"14","/Users/chunyuema/Desktop/Career/react/confusion/src/components/AboutComponent.js":"15"},{"size":643,"mtime":1611156048110,"results":"16","hashOfConfig":"17"},{"size":329,"mtime":1611157741079,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1610641584567,"results":"19","hashOfConfig":"17"},{"size":1108,"mtime":1611326691192,"results":"20","hashOfConfig":"17"},{"size":1448,"mtime":1611170424513,"results":"21","hashOfConfig":"17"},{"size":2178,"mtime":1611327443547,"results":"22","hashOfConfig":"17"},{"size":2161,"mtime":1611343822785,"results":"23","hashOfConfig":"17"},{"size":5361,"mtime":1611519638343,"results":"24","hashOfConfig":"17"},{"size":2783,"mtime":1611159851240,"results":"25","hashOfConfig":"17"},{"size":1025,"mtime":1611171452896,"results":"26","hashOfConfig":"17"},{"size":10624,"mtime":1611505136938,"results":"27","hashOfConfig":"17"},{"size":435,"mtime":1611170464757,"results":"28","hashOfConfig":"17"},{"size":4117,"mtime":1611170510838,"results":"29","hashOfConfig":"17"},{"size":2345,"mtime":1611170489257,"results":"30","hashOfConfig":"17"},{"size":4212,"mtime":1611365495529,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"5zruv1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/chunyuema/Desktop/Career/react/confusion/src/index.js",[],["64","65"],"/Users/chunyuema/Desktop/Career/react/confusion/src/App.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/reportWebVitals.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/MenuComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/shared/dishes.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/DishdetailComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/MainComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/HeaderComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/FooterComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/HomeComponent.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/ContactComponent.js",["66","67"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false, \n                lastname: false, \n                telnum: false, \n                email: false }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this); \n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n    }\n    \n    handleInputChange(event){\n        const target = event.target; \n        const value = target.type === 'checkbox' ? target.checked : target.value; \n        const name = target.name;\n        this.setState({\n            [name] : value\n        });\n    }\n\n    handleSubmit(event){\n        console.log(\"Current state is: \" + JSON.stringify(this.state)); \n        alert(\"Current state is: \" + JSON.stringify(this.state)); \n        event.preventDefault();\n    }\n\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    }\n\n    validate(firstname, lastname, telnum, email) {\n        const errors = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: ''\n        };\n        if (this.state.touched.firstname && firstname.length < 3) errors.firstname = \"First Name should be more than 3 characters\"; \n        else if (this.state.touched.firstname && firstname.length > 10) errors.firstname = \"First Name should be less than 10 characters\";\n        if (this.state.touched.lastname && lastname.length < 2) errors.lastname= \"Last Name should be more than 3 characters\"; \n        else if (this.state.touched.lastname && lastname.length > 10) errors.lastname = \"Last Name should be less than 10 characters\";\n\n        const reg = /^\\d+$/;\n        if (this.state.touched.telnum && !reg.test(telnum)) errors.telnum = \"Tel nums should be only in numbers\"\n\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) errors.email = 'Email should contain a @';\n\n        return errors;\n    }\n\n    render() {\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\"><h3>Contact Us</h3><hr /></div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className = \"row row-content\">\n                        <div className=\"col-12\">\n                            <h3>Send us your Feedback</h3>\n                        </div>\n                        <div className=\"col-12 col-md-9\">\n                            <Form onSubmit={this.handleSubmit}>\n                                <FormGroup row>\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Input type=\"text\" id=\"firstname\" name=\"firstname\" \n                                            placeholder=\"First Name\" \n                                            value={this.state.firstname} \n                                            valid={errors.firstname === ''}\n                                            invalid = {errors.firstname !== ''}\n                                            onChange={this.handleInputChange} \n                                            onBlur={this.handleBlur('firstname')}/>\n                                        <FormFeedback>{ errors.firstname }</FormFeedback>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Input type=\"text\" id=\"lastname\" name=\"lastname\" \n                                            placeholder=\"Last Name\" \n                                            value = {this.state.lastname} \n                                            valid = {errors.lastname === ''}\n                                            invalid = {errors.lastname !== '' } \n                                            onChange={this.handleInputChange} \n                                            onBlur={this.handleBlur('lastname')}/>\n                                        <FormFeedback>{ errors.lastname }</FormFeedback>\n                                    </Col>                        \n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                    <Col md={10}>\n                                        <Input type=\"tel\" id=\"telnum\" name=\"telnum\" \n                                            placeholder=\"Tel. number\" \n                                            value = {this.state.telnum} \n                                            valid = {errors.telnum === ''}\n                                            invalid = {errors.telnum !== ''}\n                                            onChange={this.handleInputChange} \n                                            onBlur={this.handleBlur('telnum')}/>\n                                        <FormFeedback>{ errors.telnum }</FormFeedback>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Input type=\"email\" id=\"email\" name=\"email\" \n                                            placeholder=\"Email\" \n                                            value={this.state.email} \n                                            valid = {errors.email === ''}\n                                            invalid = {errors.email !== ''}\n                                            onChange={this.handleInputChange} \n                                            onBlur={this.handleBlur('email')}/>\n                                        <FormFeedback>{ errors.email }</FormFeedback>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col md={{size: 6, offset: 2}}>\n                                        <FormGroup check>\n                                            <Label check>\n                                                <Input type=\"checkbox\" name=\"agree\" value={this.state.agree} onChange={this.handleInputChange}/> {' '}\n                                                <strong>May we contact you?</strong>\n                                            </Label>\n                                        </FormGroup>\n                                    </Col>\n                                    <Col md={{size: 3, offset: 1}}>\n                                        <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange}>\n                                            <option>Tel.</option>\n                                            <option>Email</option>\n                                        </Input>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                    <Col md={10}>\n                                        <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange}></Input>\n                                    </Col>\n                                </FormGroup>\n                                <FormGroup row>\n                                    <Col md={{size: 10, offset: 2}}>\n                                        <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                    </Col>\n                                </FormGroup>\n                            </Form>\n                        </div>\n                    </div>\n            </div>\n        ); \n    }\n}\n\nexport default Contact;","/Users/chunyuema/Desktop/Career/react/confusion/src/shared/promotions.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/shared/comments.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/shared/leaders.js",[],"/Users/chunyuema/Desktop/Career/react/confusion/src/components/AboutComponent.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":82,"nodeType":"74","messageId":"75","endLine":2,"endColumn":85},{"ruleId":"76","severity":1,"message":"77","line":102,"column":29,"nodeType":"78","endLine":102,"endColumn":71},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]